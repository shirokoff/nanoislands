func nb-popup-menu(nodeset options) {
    default = {
       'none': 'none'
       //'tail': 'left|right|top|bottom'
       //'menu': [
       //    {
       //        'href': '#'
       //        'text': 'Скопировать'
       //     }
       //]
    }

    nb-block('popupMenu', nb-extend(default, options))
}

match .popupMenu nb {
    <div class="nb-popup">
        if !.static {
            @data-nb = "popup"
            @class += " _hidden"
        }

        apply . nb-main-attrs

        if .tail {
            @data-nb-tail = .tail
        }

        for .menu {
            if .separator {
                <div class="nb-popup__separator"></div>
            } else {
                <a class="nb-popup__line">
                    if .href {
                        @href = .href
                    }

                    apply . nb-main-attrs
                    html(.content)
                </a>
            }
        }
    </div>
}


func nb-popup(nodeset options) {
    default = {
       'none': 'none'
    }

    nb-block('popup', nb-extend(default, options))
}

match .popup nb {
    <div class="nb-popup _hidden" data-nb='popup'>

        apply . nb-main-attrs

        if .tail {
            @data-nb-tail = .tail
        }

        if .titleContent {
           _nb-popup-title(.titleContent)
        }

        if .content {
           _nb-popup-content(.content)
        }

    </div>
}

func nb-popup-modal(nodeset options) {
    default = {
        'data-nb': {
            'modal': 'true'
            'width': 'auto'
            'height': 'auto'
            'minHeight': 'auto'
        }
        // if there is privitive deep-extend with options don't work
        'close': {
            'none':'none'
        }
    }

    nb-block('modalPopup', nb-deep-extend(default, options))
}

match .modalPopup nb {
    <div class="nb-popup nb-popup_type_modal">
        if !.static {
            @data-nb = "popup"
            @class += " _hidden"
        }

        if .theme {
            @class += ' nb-popup_theme_{.theme}'
        }

        apply . nb-main-attrs

        <div class="nb-popup__i">
            if .close {
                <a class="nb-popup__close { .close.class }">
                    if .close.attrs {
                        for .close.attrs.* {
                            @{name()} = .
                        }
                    }
                </a>
            }

            if .titleContent {
                _nb-popup-title(.titleContent)
            }

            if .content {
                _nb-popup-content(.content)
            }

            if .buttons {
                _nb-popup-buttons(.buttons)
            }

        </div>
    </div>
}


func _nb-popup-content(nodeset content) {
    <div class="nb-popup__content">
        html(content)
    </div>
}

func _nb-popup-title(nodeset title) {
    <div class="nb-popup__title">
        html(title)
    </div>
}


func _nb-popup-buttons(nodeset buttons) {
    <div class="nb-popup__buttons">
        apply buttons nb-main-attrs

        if count(buttons.data.*) {
           for buttons.data {
               nb-button(.)
           }
        } else {
           html(buttons.data)
        }
    </div>
}
